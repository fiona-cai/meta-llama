{"ast":null,"code":"var _jsxFileName = \"/Users/fionacai/meta-llama/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [result, setResult] = useState(\"\");\n\n  // Start the camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error(\"Error accessing camera:\", error);\n    }\n  };\n\n  // Take a picture\n  const takePicture = () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const imageData = canvas.toDataURL(\"image/png\");\n    analyzePicture(imageData); // Placeholder for Flask integration\n  };\n\n  // Send image to Flask (empty function for now)\n  const analyzePicture = imageData => {\n    console.log(\"Image data to send to Flask:\", imageData);\n    // You can later use fetch() to send this imageData to your Flask backend\n    setResult(\"This is what you took a picture of! (Flask will calculate)\");\n  };\n\n  // Start camera on page load\n  React.useEffect(() => {\n    startCamera();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Camera App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      style: {\n        width: \"100%\",\n        maxWidth: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: takePicture,\n      children: \"Take a Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U2G6DQD7M3exGlqD+HMO18cLjt0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","App","_s","videoRef","canvasRef","result","setResult","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","takePicture","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","imageData","toDataURL","analyzePicture","log","useEffect","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","maxWidth","display","onClick","_c","$RefreshReg$"],"sources":["/Users/fionacai/meta-llama/my-app/src/App.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nfunction App() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [result, setResult] = useState(\"\");\n\n  // Start the camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error(\"Error accessing camera:\", error);\n    }\n  };\n\n  // Take a picture\n  const takePicture = () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    const imageData = canvas.toDataURL(\"image/png\");\n    analyzePicture(imageData); // Placeholder for Flask integration\n  };\n\n  // Send image to Flask (empty function for now)\n  const analyzePicture = (imageData) => {\n    console.log(\"Image data to send to Flask:\", imageData);\n    // You can later use fetch() to send this imageData to your Flask backend\n    setResult(\"This is what you took a picture of! (Flask will calculate)\");\n  };\n\n  // Start camera on page load\n  React.useEffect(() => {\n    startCamera();\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Camera App</h1>\n      <video ref={videoRef} autoPlay style={{ width: \"100%\", maxWidth: \"500px\" }}></video>\n      <canvas ref={canvasRef} style={{ display: \"none\" }}></canvas>\n      <br />\n      <button onClick={takePicture}>Take a Picture</button>\n      <p>{result}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMO,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzET,QAAQ,CAACU,OAAO,CAACC,SAAS,GAAGN,MAAM;IACrC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAED;EACA,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,MAAM,GAAGd,SAAS,CAACS,OAAO;IAChC,MAAMD,KAAK,GAAGT,QAAQ,CAACU,OAAO;IAE9BK,MAAM,CAACC,KAAK,GAAGP,KAAK,CAACQ,UAAU;IAC/BF,MAAM,CAACG,MAAM,GAAGT,KAAK,CAACU,WAAW;IACjC,MAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACE,SAAS,CAACb,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEM,MAAM,CAACC,KAAK,EAAED,MAAM,CAACG,MAAM,CAAC;IAE3D,MAAMK,SAAS,GAAGR,MAAM,CAACS,SAAS,CAAC,WAAW,CAAC;IAC/CC,cAAc,CAACF,SAAS,CAAC,CAAC,CAAC;EAC7B,CAAC;;EAED;EACA,MAAME,cAAc,GAAIF,SAAS,IAAK;IACpCV,OAAO,CAACa,GAAG,CAAC,8BAA8B,EAAEH,SAAS,CAAC;IACtD;IACApB,SAAS,CAAC,4DAA4D,CAAC;EACzE,CAAC;;EAED;EACAV,KAAK,CAACkC,SAAS,CAAC,MAAM;IACpBvB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAK+B,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClCjC,OAAA;MAAAiC,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBrC,OAAA;MAAOsC,GAAG,EAAEnC,QAAS;MAACoC,QAAQ;MAACR,KAAK,EAAE;QAAEZ,KAAK,EAAE,MAAM;QAAEqB,QAAQ,EAAE;MAAQ;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpFrC,OAAA;MAAQsC,GAAG,EAAElC,SAAU;MAAC2B,KAAK,EAAE;QAAEU,OAAO,EAAE;MAAO;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC7DrC,OAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrC,OAAA;MAAQ0C,OAAO,EAAEzB,WAAY;MAAAgB,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDrC,OAAA;MAAAiC,QAAA,EAAI5B;IAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACnC,EAAA,CAnDQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}