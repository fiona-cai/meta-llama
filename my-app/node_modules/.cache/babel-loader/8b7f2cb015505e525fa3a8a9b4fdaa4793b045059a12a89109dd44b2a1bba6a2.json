{"ast":null,"code":"var _jsxFileName = \"/Users/fionacai/meta-llama/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [message, setMessage] = useState(\"\");\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (err) {\n      console.error(\"Error accessing the camera:\", err);\n    }\n  };\n\n  // Take a picture\n  const takePicture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n      context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n\n      // Send the image to Flask backend (placeholder)\n      processImage(canvas.toDataURL(\"image/png\"));\n    }\n  };\n\n  // Placeholder for Flask API call\n  const processImage = imageData => {\n    console.log(\"Image captured, sending to Flask...\");\n    setMessage(\"Processing image...\"); // Example message\n    // Add Flask API call here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Camera App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      style: {\n        width: \"100%\",\n        maxWidth: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: takePicture,\n        children: \"Take a Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"laEiC5ZWpCn4pQpNhZrEHhhpIjE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","App","_s","videoRef","canvasRef","message","setMessage","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","console","error","takePicture","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","processImage","toDataURL","imageData","log","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","maxWidth","display","onClick","_c","$RefreshReg$"],"sources":["/Users/fionacai/meta-llama/my-app/src/App.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nfunction App() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [message, setMessage] = useState(\"\");\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (err) {\n      console.error(\"Error accessing the camera:\", err);\n    }\n  };\n\n  // Take a picture\n  const takePicture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext(\"2d\");\n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n      context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n\n      // Send the image to Flask backend (placeholder)\n      processImage(canvas.toDataURL(\"image/png\"));\n    }\n  };\n\n  // Placeholder for Flask API call\n  const processImage = (imageData) => {\n    console.log(\"Image captured, sending to Flask...\");\n    setMessage(\"Processing image...\"); // Example message\n    // Add Flask API call here\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Camera App</h1>\n      <video ref={videoRef} autoPlay style={{ width: \"100%\", maxWidth: \"500px\" }} />\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\n      <div>\n        <button onClick={takePicture}>Take a Picture</button>\n      </div>\n      <div>\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}