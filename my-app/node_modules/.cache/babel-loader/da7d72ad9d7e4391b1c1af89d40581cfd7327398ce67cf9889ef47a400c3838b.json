{"ast":null,"code":"var _jsxFileName = \"/Users/fionacai/meta-llama/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Access the user's camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error(\"Error accessing camera: \", error);\n    }\n  };\n\n  // Capture a picture and process it\n  const takePicture = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (video && canvas) {\n      const context = canvas.getContext(\"2d\");\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Draw video frame onto the canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Call the function to process the picture (placeholder)\n      processPicture();\n    }\n  };\n\n  // Placeholder function to process the image\n  const processPicture = () => {\n    console.log(\"Picture taken. Processing...\");\n    // Add your image processing logic here\n  };\n\n  // Start the camera when the component is loaded\n  React.useEffect(() => {\n    startCamera();\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop()); // Stop the camera\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Camera App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      style: {\n        width: \"80%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: takePicture,\n      children: \"Take a Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0gwqVvoOV2or9Ql4L8GH2BGn3hc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","App","_s","videoRef","canvasRef","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","takePicture","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","processPicture","log","useEffect","tracks","getTracks","forEach","track","stop","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","marginBottom","onClick","display","_c","$RefreshReg$"],"sources":["/Users/fionacai/meta-llama/my-app/src/App.js"],"sourcesContent":["import React, { useRef } from \"react\";\n\nfunction App() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Access the user's camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      if (videoRef.current) videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error(\"Error accessing camera: \", error);\n    }\n  };\n\n  // Capture a picture and process it\n  const takePicture = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    if (video && canvas) {\n      const context = canvas.getContext(\"2d\");\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Draw video frame onto the canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Call the function to process the picture (placeholder)\n      processPicture();\n    }\n  };\n\n  // Placeholder function to process the image\n  const processPicture = () => {\n    console.log(\"Picture taken. Processing...\");\n    // Add your image processing logic here\n  };\n\n  // Start the camera when the component is loaded\n  React.useEffect(() => {\n    startCamera();\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach((track) => track.stop()); // Stop the camera\n      }\n    };\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <h1>Camera App</h1>\n      <video ref={videoRef} autoPlay style={{ width: \"80%\", marginBottom: \"10px\" }} />\n      <br />\n      <button onClick={takePicture}>Take a Picture</button>\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}